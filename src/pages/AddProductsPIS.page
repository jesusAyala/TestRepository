<apex:page standardController="Opportunity" extensions="PISOpportunityProductsExtension" id="page">
<script type="text/javascript" src="/canvas/sdk/js/33.0/controller.js" />
<script type="text/javascript">
  
  //Object to pass to VF controller
  function PISNode() {
     this.cid = null;
     this.englishDescription = null;
     this.languageSpecificDescription = null;
  }

  //Holds all products to be added
  var productsToAdd;
  var opptyID = "{!opportunity.ID}";
  var returnURL = "/{!opportunity.ID}";
  
  // Set timeout at page level
  Visualforce.remoting.timeout = 30000;

  //Set to true for enhanced JavaScript debugging output 
  var dbgMode = false;

  //To prevent duplicate adding when the "Add" button is clicked more than once
  var buttonPressed = false;


  //Handle the response from handleProducts (VF Remoting)
  function returnHandler(result, event) {
      if (event.status) {
          if (result.success == true) {
            window.location.href = returnURL;
          } else {
            
            var message = 'Error: ';
            if (result.failedProducts.length > 0) {
              message += result.failed +' of ' + result.total + ' products not found.\n\n';
              message += 'The following products could not be added: ';
              for (var i = 0; i < result.failedProducts.length; i++) {
                var product = result.failedProducts[i];
                message += '\n[' + product.cid + '] ' + product.englishDescription;
                
                if (product.languageSpecificDescription != '') {
                  message += ' (' + product.languageSpecificDescription + ')';
                }
              }
            } else {
              message += 'Insufficient access rights for this opportunity!\n';
              message += result.failed +' of ' + result.total + ' products could not be added.\n\n';
            }
            alert(message);
            window.location.href = returnURL;
        }

      } else if (event.type == 'exception') {
        alert(event.message);
        var message = 'Exception: ' + result.failed +' of ' + result.total + ' products failed.\n\n';
        message += 'The following products will not be added:';
        
        for (var i = 0; i < result.failedProducts.length; i++) {
          var product = result.failedProducts[i];
          message += '\n[' + product.cid + '] ' + product.englishDescription;
          
          if (product.languageSpecificDescription != '') {
            message += ' (' + product.languageSpecificDescription + ')';
          }
        }
        alert(message);
        window.location.href = returnURL;

      } else {
          alert('Event type "other": ' + event.message);
      }
  }

  // function that uses APEX controller extentsion to save products to opportunity
  function handleProducts() {
    Visualforce.remoting.Manager.invokeAction(
      '{!$RemoteAction.PISOpportunityProductsExtension.addProducts}', 
        opptyID,
        productsToAdd,
        returnHandler, 
      {escape: true}
    );
  }
 
 //Receives the Canvas APP event with the products to add
 Sfdc.canvas(function() {  
        Sfdc.canvas.controller.subscribe(
            {name : 'pis.sendProducts', 
                onData : function (data) {
                  var parsedInput = JSON.parse(data.value);
                  
               if (buttonPressed == true) {
                  alert('Please click only once!');
                } else {
                  buttonPressed = true;

                  if (parsedInput.Type == 'Apply') {
                    //alert('pis.sendProducts: Apply event.');
                    productsToAdd = new Array();
                    for (var i = 0; i < parsedInput.Nodes.length; i++) {
                      var jsnProduct = parsedInput.Nodes[i];
                      tmpProduct = new PISNode();
                      
                      if (dbgMode == true) {
                        alert('Data: ' + data);
                        alert('CID: ' + jsnProduct.Cid);
                        alert('Parsed input: '+ parsedInput);
                      }
                      
                      tmpProduct.cid = jsnProduct.Cid;
                      tmpProduct.englishDescription = jsnProduct.EnglishDescription;
                      tmpProduct.languageSpecificDescription = jsnProduct.LanguageSpecificDescription;
                      
                      if (dbgMode == true ) {
                        var dbg = 'CID ' + tmpProduct.cid  + '\n';
                        dbg += 'Description: ' + tmpProduct.englishDescription  + '\n';
                        dbg += 'local Description: ' +  tmpProduct.languageSpecificDescription + '\n';
                        alert('Debug: ' + dbg);
                      }
                      productsToAdd.push(tmpProduct);
                    }
                    handleProducts();

                  } else if (parsedInput.Type == 'Cancel') { 
                    if (dbgMode == true) {
                      if (confirm('pis.sendProducts: Cancel event.')) {
                        window.location.href = returnURL;
                      }
                    } else {
                      window.location.href = returnURL;
                    }
                  } else {
                    alert('pis.sendProducts: unknown event: ' + parsedInput.Type);
                  }
              }
              }
            }
        );
    });   
 </script>
 
 <!--
 1) Project site country (which can be different from end user country; this is either manually selected or comes from the end user project)

2) if not 1, then End user country coming from the end user

<p>Project site country: "{!Opportunity.End_User_Project_Site_Country__c}"</p>
<p>End User Country: "{!Opportunity.Account_End_User__r.Primary_Address_Country__c}"</p>
<p>Filter Parameter for canvas app: "{!IF(ISBLANK(Opportunity.End_User_Project_Site_Country__c), Opportunity.Account_End_User__r.Primary_Address_Country__c, Opportunity.End_User_Project_Site_Country__c)}"</p>

<p>Project site country: "{!Opportunity.End_User_Project_Site_Country__c}"</p>
<p>End User Country: "{!Opportunity.Account_End_User__r.Primary_Address_Country__c}"</p>
<p>Billing Country: "{!Opportunity.Account_End_User__r.BillingCountryCode}"</p>
<p>Filter Parameter for canvas app: "{!IF(ISBLANK(Opportunity.End_User_Project_Site_Country__c), Opportunity.Account_End_User__r.Primary_Address_Country__c, Opportunity.End_User_Project_Site_Country__c)}"</p>
<p>ConfigKey:"{!$Setup.PIS__c.configKey__c}"</p>
-->

  <apex:canvasApp applicationName="{!$Label.PIS_TreeView_Canvas}"
                      parameters="{filterCountry:'{!IF(ISBLANK(Opportunity.End_User_Project_Site_Country__c), Opportunity.Account_End_User__r.BillingCountryCode, Opportunity.End_User_Project_Site_Country__c)}',
                      GARID:'{!$Setup.PIS__c.extSystemId__c}',
                      mode:'create',
                      configKey:'{!$Setup.PIS__c.configKey__c}'
              }" 
              width="900" height="600" id="canvasapp"/>
</apex:page>